=============================================================================
2014-7-07 18:58
=============================================================================

1 earphone，耳机，microphone，麦克风
2 双工通信：
A duplex communication system is a point-to-point system composed of two
connected parties or devices that can communicate with one another in both
directions, simultaneously. 

Duplex systems are employed in many communications networks, either to allow
for a communication "two-way street" between two connected parties or to
provide a "reverse path" for the monitoring and remote adjustment of equipment
in the field.

Systems that do not need the duplex capability use instead simplex
communication in which one device transmits and the others can only "listen"
and can not be heard while in the moment of "listening" (one transmits/talks
and the other can only receive/listen at a time). Examples are broadcast 
radio and television,garage door openers, baby monitors, wireless
microphones, radio controlled models, surveillance cameras, and missile
telemetry.

3 对2的总结，双工通信提供双向通信链路，双工链路连接的两个设备，其中任意一个都
可以发信号和接收信号，单工链路，设备只能发或者只能收，通信链路是单向的。

全双工，指的是设备发信号的同时可以接收信号，设备接收信号的同时也可以发送信号；
半双工，指的是设备发信号的同时不能同时接收信号，接收信号的同时不能同时发送信号；

4 utp，非屏蔽双绞线，stp，屏蔽双绞线，utp和stp都是在计算机局域网中使用的双绞线
。stp有屏蔽材料，减少环境中电磁干扰的影响，一般没有特殊环境要求的情况下，我们
一般使用utp就可以了。

5 卫星链路
6 无线链路
7 CRC,循环冗余校验
8 ipconfig /release adapterName ;   释放dhcp服务器分配的ip地址
   ipconfig /renew adapterName;      向dhcp服务器重新申请一个可用的ip地址
   ipconfig /all;  显示的信息比ipconfig更加丰富
   ipconfig /allcompartments;  显示网络配置的分段信息
   ipconfig /flushdns;  清空本地dns缓存
   ipconfig /displaydns;  显示本地dns缓存
   ipconfig /registerdns;  dns客户端手动向服务器注册dns
   ipconfig /showclassid;  显示dhcp的类别信息
   ipconfig /setclassid;  设置dhcp的类别信息 
9 ping -j ip地址列表（多个ip地址用空格分隔） targetHost;  松散源路由，ip地址列
表中最多包含9个ip地址, ping -k严格源路由。

10 openVPN
11 samba
12 NoSQL, mongodb
13 windows活动目录AD
14 说操作系统是32位还是64位，主要指的是，操作系统中使用的访存地址是32位还是64
位的

15 栈帧(Stack Frame)也叫过程活动记录(Active Records)
16 操作系统对分配内存的追踪和管理，是通过空闲链表或者位图来进行操作的
17 变量、常量所占内存空间的分配，将其分为两种类型：静态分配和动态分配。
	 1）对于全局变量、static变量、常量，实际上都是静态分配，是在编译就由编译器
	 确定了的，这个可以对源文件进行编译后，通过objdump -D *.o进行验证；

   2）动态分配的类型主要包括，在栈上创建变量、在堆上创建变量；

18 操作系统需要进行垃圾回收，对于某些语言来讲，垃圾回收有显示回收和隐式回收之
 分。例如c语言需要显示地free，是显示进行垃圾回收，java不需要显示调用释放堆内存
 的操作，是由gc进行回收。但是对操作系统来讲，必须考虑垃圾回收的问题。

操作系统使用的垃圾回收的方法，包括：标记清除法、复制法、引用计数法、分代
 式垃圾回收法；

- 标记清除法，其思想是将所有分配的内存用一个图进行管理，并将内存块分为
	 root节点以及由root节点可以访问到的堆中的堆节点，从root节点开始，可
	 以访问到的所有的heap节点，在其内存块的首部设置标志位，表示可以访问
	 到，访问不到的节点就无法设置标志位，操作系统扫描的时候，如果检测到标志位
	 没有进行设置，则认为是垃圾，予以回收。
- 复制法，其思想是使用两个堆，一个是平时程序使用，另一个是在进行垃圾回收
  	 的时候使用。当进行垃圾回收的时候，将堆节点中仍然有效的内存拷贝到另一个堆中，并将无效的heap节点回收，最后将两个堆交换。


- 引用计数法，对每个heap节点进行引用计数，当计数为0时，予以回收。
- 分代回收法，其思想是根据申请内存节点的新旧进行不同频率的扫描，新节点变
	 成垃圾的可能性更大，所以扫描频率要高于之前分配的heap节点……

19 double free()
	 如果对一块内存double free，也就是说对malloc申请的内存free不止一次，就由可
	 能出现问题，举个简单的例子，进程a申请了一块内存，由ptr指向这块内存，然后
	 调用free(ptr)释放了这段内存，假设此时，进程b申请的内存恰好也是ptr的值指向
	 的内存，进程a第二次调用free的时候，就会破坏进程b的可访问的地址空间。

   现在的操作系统会在运行时对double free进行检查，至少linux上面现在是这样的。

20 一次性定时任务用at，周期性定时任务用cron。使用crontab -e为当前用户创建一个
cron文件，在里面添加定时任务。使用crontab -l列出定时任务，使用crontab -r 删除
cron文件。用户cron文件的位置在tmp下面，文件名是随机生成的。

21 md5sum file > file.md5，生成文件的md5 hash值。
	 1）检验和checksum，可以用来检查数据的完整性的正确性，linux下的工具
	 cksum(short for checksum)可以用来对        文件的检验和进行计算。如果文件
	 的内容长度发生了变化，那么检验和一定会发生变化。检验和不正确，表明文件一
	 定不正确；如果检验和正确，文件可能正确也可能不正确，因为可以人为地修改文
	 件内容，使得检验和保持不变。为      了检测文件是否被篡改，应该计算文件的
	 hash值。只要文件的一丁点数据发生变化，hash值就会发生明显的变化。

     2）hash值计算工具，md5sum。
     文件的发布者，例如文件名是newfile，发布者首先计算其hash值并生成对应的hash
     文件md5sum newfile >                    newfile.md5，然后将这两个文件同时
     发布在网站上进行下载；
    
     文件的下载者，将这两个文件下载下来之后，放置在同一个文件夹下面，使用命令
     md5sum -c newfile.md5对文件进        行校验，*.md5文件中保存了文件newfile
     的hash值以及文件路径，md5sum读取文件路径，并对文件进行hash计算，      将
     计算出来的值与md5文件中的值进行对比，如果一致就显示newfile:OK，表示没有被
     篡改过，可以放心使用；反          之，则显示校验和不匹配。

22 gpg -import package.asc; 导入公钥到keyring
	 gpg -verify package.tar.gz.asc; 下载软件包package.tar.gz以及它的签名文件
	 package.tar.gz.asc，然后验证

23 RPM files come with their own built-in mechanism for verifying packages. As
with the above example, you should get the developer's public key and import
it. The most recent version of the RPM system uses its own process of
importing the key. Check the documentation on your system to see what version
you're using and how to do it. You can then check the integrity of a
downloaded RPM in this way:

     rpm -checksig pacakge.rpm
24 shutdown -h now;
     shutdown -h +15;
25 MTA, mail transfer agent。debian默认使用Exim，rhel默认使用Sendmail，建议使
用Postfix。
    postfix的详细配置！！！！
26 Mysql, 修改root用户的密码后，需要重启后才能生效。
27 apt，/etc/apt/sources.list
28 yum，/etc/yum/yum.repos.d/*
29 grep，匹配
    grep -v，不匹配
    grep -i，忽略大小写
    grep -c，对匹配到的计数
    grep -E '...'，匹配正则表达式
30 Snort，入侵检测.
	 安装过程：安装snort，snort-mysql，到/usr/share/doc/snort-mysql下面执行命
	 令zcat create ....，然后下载snort-          report配置srconf.php，然后就
	 可以访问http://localhost/snort-report/alerts.php进行查看了。

31 openSSH
32 netfilter/iptables，防火墙
33 windows passwork key，当windows账户登录密码忘记、无法登录的时候，有两种策略
：
	1）重启电脑，开机按f8，进入带命令行的安全模式，此时可以使用默认的
	Administrator的账户，该管理员账户默认是     被禁用的，进入带命令行的安全模
	式后，则可以通过运行命令激活该账户:

	net user Administrator /active:yes来激活Administrator账户，然后shutdown -r
	重启，即可以进入Administrator账户对     丢失密码的账户进行密码设置；
	
	2）下载windows password key，烧到u盘，从u盘引导，重置账户密码；

34 netsh的使用、powershell的使用
35 

=============================================================================
2014-06-19 02:58
=============================================================================

大部分的总结都是汇编相关的。

windows：
subst命令，将一个驱动器下的文件夹，用虚拟的盘符来代替，访问更方便；

select 1,2 from tablename；mysql下面不能够选择出第一列、第二列，但是access里面
不清楚了；

世界第一的程序：
more +1 %~s0 | debug
经过测试，%~s0表示的是命令行中输入的脚本的名称（如果有参数的话，还会显示出参数
），如果直接双击运行脚本的话，%~s0就只表示当前脚本的名称。

这样的话，就清楚了，more +1 %~s0读取当前脚本的内容，并显示从第一行开始的内容（
+1实际上是第二行，+0或者省略+n才是从第一行），显示的内容正好是可执行程序反汇编
后对应的汇编代码，只不过这些汇编代码从ascii码被转成了16进制数据，将这些数据送
入debug程序就可以运行了。

debug命令:
r：查看、修改寄存器中的值；
d：查看内存中的值；
e：修改内存中的值；
u：将内存中的数据解释为机器指令和汇编指令；
t：执行cs：ip所指向的内存单元中的指令；
a：向指定的内存单元中写入汇编指令；

指定地址的时候，通常都是‘段地址：段内偏移地址’的形式；
显示指定内存单元的数据时，可以指定‘段地址：段内偏移地址 [内存单元数量]’；

cs：
代码段寄存器的值，是由操作系统运行程序之前自动装入的，程序中不能够改变cs的值，
否则就乱套了，可以访问任意内存了，即使是这样，8086也没有实现保护模式。

debug的时候，在调试程序之前，可以手动修改代码的段地址、偏移量等，但是不能通过
汇编指令修改cs的内容。

compiler：将源程序编译成目标文件；
linker：将一个或者多个目标文件，以及目标文件中调用的库，组合起来，形成可执行程
序；
loader：将可执行程序装入内存；

commander.exe就是windows下的shell，它在执行命令或者exe程序的时候，是这样将程序
装载入内存的：
1）首先寻找一个内存空间够大的区域，并且其起始地址的段地址为sa，偏移地址为0，即
起始地址为sa*16+0；
2）在这段地址空间的前256字节，创建一个psp区（程序段前缀）；
3）前256字节之后的地址正好为段地址变成sa+10h，偏移量仍然是0，这后面的就是程序
段，也就是cs段；
4）将sa的值存储到ds中；
5）设置cs：ip指向（sa+10h）*16+0；
6）commander让出cpu控制权，开始执行程序；
通过debug调试的时候可以发现，开始的时候ds的值比cs的值小10h，验证了上述3）过程。

我们知道，组成原理里面讲过，cpu的寻址方式有7-8种，在看机器指令的时候，这个比较
明显。但是在汇编语言里面不明显，汇编语言的编译器可能会将汇编语言中寻址操作翻译
成机器指令的7-8种寻址方式。

一般在pc下，dos方式下，系统程序和其他合法程序一般都不会使用0:200~0:2ff的地址空
间，在实模式下调试汇编程序时，可以再这段内存中进行；

mysql：
不支持intersect；不支持out full join……啊，对标准的支持真实太差劲了！

c指针，int (*ptr)[100]; ptr是一个指向数组的指针，数组中有100个元素；
int *ptr; ptr是个指向int变量的指针；
int (*ptr)(void *); ptr是一个函数指针；





